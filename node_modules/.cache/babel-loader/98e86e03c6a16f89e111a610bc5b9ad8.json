{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/devdo/devdo-frontend/frontend/src/components/IdeaCreate.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APIURL } from '../config';\nimport IdeaForm from './IdeaForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IdeaCreate() {\n  _s();\n\n  const initialIdeaState = {\n    title: '',\n    tags: []\n  };\n  const [idea, setIdea] = useState(initialIdeaState);\n  const [createdId, setCreatedId] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleChange = e => {\n    e.persist();\n    setIdea({ ...idea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function getCookie(name) {\n    let cookieValue = null;\n    console.log(document);\n\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  const csrftoken = getCookie('csrftoken');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(csrftoken);\n    const url = `${APIURL}/ideas/`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'X-CSRFToken': {\n          csrftoken\n        }\n      },\n      body: JSON.stringify(idea)\n    }).then(res => res.json()).then(data => {\n      setCreatedId(data._id);\n    }).catch(() => {\n      setError(true);\n    });\n  };\n\n  if (createdId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/ideas/${createdId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's your idea?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: \"Sorry, something went wrong. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(IdeaForm, {\n      idea: idea,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IdeaCreate, \"mfZFIklgyWPSCMOZ8oQkZFwFQRU=\");\n\n_c = IdeaCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdeaCreate\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/devdo/devdo-frontend/frontend/src/components/IdeaCreate.js"],"names":["React","useState","Redirect","APIURL","IdeaForm","IdeaCreate","initialIdeaState","title","tags","idea","setIdea","createdId","setCreatedId","error","setError","handleChange","e","persist","target","name","value","getCookie","cookieValue","console","log","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","csrftoken","handleSubmit","preventDefault","url","fetch","method","headers","body","JSON","stringify","then","res","json","data","_id","catch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { APIURL } from '../config'\nimport IdeaForm from './IdeaForm'\nexport default function IdeaCreate() {\n    const initialIdeaState = {\n        title: '',\n        tags: [],\n    }\n    const [idea, setIdea] = useState(initialIdeaState)\n    const [createdId, setCreatedId] = useState(null)\n    const [error, setError] = useState(false)\n    const handleChange = (e) => {\n        e.persist()\n        setIdea({\n            ...idea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function getCookie(name) {\n        let cookieValue = null;\n        console.log(document)\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n    const csrftoken = getCookie('csrftoken');\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(csrftoken)\n        const url = `${APIURL}/ideas/`\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'X-CSRFToken': { csrftoken }\n            },\n            body: JSON.stringify(idea)\n        })\n            .then(res => res.json())\n            .then(data => {\n                setCreatedId(data._id)\n            })\n            .catch(() => {\n                setError(true)\n            })\n    }\n    if (createdId) {\n        return <Redirect to={`/ideas/${createdId}`} />\n    }\n\n    return (\n        <div>\n            <h1>What's your idea?</h1>\n            {error && <div className=\"alert alert-danger\">Sorry, something went wrong. Please try again.</div>}\n            <IdeaForm idea={idea} handleChange={handleChange} handleSubmit={handleSubmit}></IdeaForm>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}