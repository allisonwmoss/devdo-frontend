{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/devdo/devdo-frontend/frontend/src/components/IdeaCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APIURL } from '../config';\nimport IdeaForm from './IdeaForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IdeaCreate() {\n  _s();\n\n  const initialIdeaState = {\n    title: '',\n    tags: []\n  };\n  const [idea, setIdea] = useState(initialIdeaState);\n  const [createdId, setCreatedId] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleChange = e => {\n    e.persist();\n    setIdea({ ...idea,\n      [e.target.name]: e.target.value\n    });\n    console.log(idea);\n  }; // function getCookie(name) {\n  //     // let cookieValue = null;\n  //     // console.log(document.cookie)\n  //     // if (document.cookie && document.cookie !== '') {\n  //     //     const cookies = document.cookie.split(';');\n  //     //     for (let i = 0; i < cookies.length; i++) {\n  //     //         const cookie = cookies[i].trim();\n  //     //         if (cookie.substring(0, name.length + 1) === (name + '=')) {\n  //     //             cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n  //     //             break;\n  //     //         }\n  //     //     }\n  //     // }\n  //     // return cookieValue;\n  // }\n  // const csrftoken = getCookie('csrftoken');\n  // const getCookie = () => {\n  //     let cookieValue = null;\n  //     if (localStorage.getItem('token') !== null) {\n  //         cookieValue = localStorage.getItem('token')\n  //         console.log('token is not null')\n  //         return cookieValue\n  //     } else {\n  //         console.log('token is null')\n  //         return cookieValue\n  //     }\n  // }\n  // const csrftoken = getCookie()\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(csrftoken)\n    // const url = `${APIURL}/ideas/`\n\n    const stuffToSend = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        // 'X-CSRFToken': { csrftoken }\n        'Authorization': `Token ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(idea),\n      credentials: 'include'\n    };\n    fetch(`${APIURL}/ideas/`, stuffToSend // {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'application/json; charset=UTF-8',\n    //         // 'X-CSRFToken': { csrftoken }\n    //         'Authorization': `Token ${localStorage.getItem('token')}`\n    //     },\n    //     body: JSON.stringify(idea),\n    //     credentials: 'include'\n    // }\n    ).then(res => res.json()).then(data => {\n      // setCreatedId(data._id)\n      console.log(data);\n    }).catch(() => {\n      setError(true);\n    });\n  }; // if (createdId) {\n  //     return <Redirect to={`/ideas/${createdId}`} />\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's your idea?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: \"Sorry, something went wrong. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(IdeaForm, {\n      idea: idea,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IdeaCreate, \"mfZFIklgyWPSCMOZ8oQkZFwFQRU=\");\n\n_c = IdeaCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdeaCreate\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/devdo/devdo-frontend/frontend/src/components/IdeaCreate.js"],"names":["React","useEffect","useState","Redirect","APIURL","IdeaForm","IdeaCreate","initialIdeaState","title","tags","idea","setIdea","createdId","setCreatedId","error","setError","handleChange","e","persist","target","name","value","console","log","handleSubmit","preventDefault","stuffToSend","method","headers","localStorage","getItem","body","JSON","stringify","credentials","fetch","then","res","json","data","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,KAAK,EAAE,EADc;AAErBC,IAAAA,IAAI,EAAE;AAFe,GAAzB;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,gBAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,OAAF;AACAP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACO,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFtB,KAAD,CAAP;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACH,GAPD,CARiC,CAiBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,QAAMc,YAAY,GAAIP,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACQ,cAAF,GADwB,CAExB;AACA;;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,iCADX;AAEL;AACA,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHnD,OAFO;AAOhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf,CAPU;AAQhBwB,MAAAA,WAAW,EAAE;AARG,KAApB;AAUAC,IAAAA,KAAK,CAAE,GAAE/B,MAAO,SAAX,EAAqBsB,WAArB,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVC,KAAL,CAYKU,IAZL,CAYUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZjB,EAaKF,IAbL,CAaUG,IAAI,IAAI;AACV;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACH,KAhBL,EAiBKC,KAjBL,CAiBW,MAAM;AACTzB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAnBL;AAoBH,GAlCD,CA/CiC,CAkFjC;AACA;AACA;;;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,eAGI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,IAAhB;AAAsB,MAAA,YAAY,EAAEM,YAApC;AAAkD,MAAA,YAAY,EAAEQ;AAAhE;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA9FuBlB,U;;KAAAA,U","sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { APIURL } from '../config'\nimport IdeaForm from './IdeaForm'\nexport default function IdeaCreate() {\n    const initialIdeaState = {\n        title: '',\n        tags: [],\n    }\n    const [idea, setIdea] = useState(initialIdeaState)\n    const [createdId, setCreatedId] = useState(null)\n    const [error, setError] = useState(false)\n    const handleChange = (e) => {\n        e.persist()\n        setIdea({\n            ...idea,\n            [e.target.name]: e.target.value\n        })\n        console.log(idea)\n    }\n\n    // function getCookie(name) {\n    //     // let cookieValue = null;\n    //     // console.log(document.cookie)\n    //     // if (document.cookie && document.cookie !== '') {\n    //     //     const cookies = document.cookie.split(';');\n    //     //     for (let i = 0; i < cookies.length; i++) {\n    //     //         const cookie = cookies[i].trim();\n    //     //         if (cookie.substring(0, name.length + 1) === (name + '=')) {\n    //     //             cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n    //     //             break;\n    //     //         }\n    //     //     }\n    //     // }\n    //     // return cookieValue;\n    // }\n    // const csrftoken = getCookie('csrftoken');\n    // const getCookie = () => {\n    //     let cookieValue = null;\n    //     if (localStorage.getItem('token') !== null) {\n    //         cookieValue = localStorage.getItem('token')\n    //         console.log('token is not null')\n    //         return cookieValue\n    //     } else {\n    //         console.log('token is null')\n    //         return cookieValue\n    //     }\n    // }\n\n    // const csrftoken = getCookie()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log(csrftoken)\n        // const url = `${APIURL}/ideas/`\n        const stuffToSend = {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                // 'X-CSRFToken': { csrftoken }\n                'Authorization': `Token ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(idea),\n            credentials: 'include'\n        }\n        fetch(`${APIURL}/ideas/`, stuffToSend\n            // {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-type': 'application/json; charset=UTF-8',\n            //         // 'X-CSRFToken': { csrftoken }\n            //         'Authorization': `Token ${localStorage.getItem('token')}`\n            //     },\n            //     body: JSON.stringify(idea),\n            //     credentials: 'include'\n            // }\n        )\n            .then(res => res.json())\n            .then(data => {\n                // setCreatedId(data._id)\n                console.log(data)\n            })\n            .catch(() => {\n                setError(true)\n            })\n    }\n    // if (createdId) {\n    //     return <Redirect to={`/ideas/${createdId}`} />\n    // }\n\n    return (\n        <div>\n            <h1>What's your idea?</h1>\n            {error && <div className=\"alert alert-danger\">Sorry, something went wrong. Please try again.</div>}\n            <IdeaForm idea={idea} handleChange={handleChange} handleSubmit={handleSubmit}></IdeaForm>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}